name: Run backend-sdk-testing tests
description:
  Will clone the `backend-sdk-testing` repo in it's own folder in the workspace directory.
  Expects `node` to be installed. The test-server and core need to be running before this action.
  Expected ENVs = SUPERTOKENS_CORE_HOST, SUPERTOKENS_CORE_PORT, API_PORT

inputs:
  version:
    description: The git ref to clone, usually the FDI version
    required: true

  check-name-suffix:
    description: Suffix to append to check names (usually matrix values)
    required: true
  
  path:
    description: Relative path where the repo will be cloned
    required: false
    default: backend-sdk-testing

runs:
  using: composite

  steps:
    - uses: actions/checkout@v4
      with:
        repository: supertokens/backend-sdk-testing
        ref: ${{ inputs.version }}
        path: ${{ inputs.path }}

    - name: Setup backend-sdk-testing
      working-directory: ${{ inputs.path }}
      shell: bash
      run: |
        npm install
        npm run build

    - name: Run tests
      working-directory: ${{ inputs.path }}
      shell: bash
      run: |
        npm test
      env:
        TEST_MODE: testing

    - if: always()
      name: Fix paths
      working-directory: ${{ inputs.path }}
      shell: bash
      # Doing it in the shell since the Reporter's `transformers` don't seem to work
      # run: sed -i "s|$GITHUB_WORKSPACE/${{ inputs.path }}/test||g" test-results.xml
      run: sed -i "s|${{ github.workspace }}/${{ inputs.path }}/test||g" test-results.xml

    - if: always()
      name: Reporter
      # Alternative: dorny/test-reporter@v1 - does not create a summary
      uses: mikepenz/action-junit-report@v5
      with:
        report_paths: ${{ inputs.path }}/test-results.xml
        check_name: Backend SDK Tests ${{ inputs.check-name-suffix }}
        # Include table with all test results in the summary
        detailed_summary: true
        # Skips the summary table if only successful tests were detected.
        skip_success_summary: true
        # Group the testcases by test suite in the detailed_summary
        group_suite: true
        # Don't fail if no test are found.
        require_tests: true
        # Fail the build in case of a test failure.
        fail_on_failure: true
        # No annotations will be added to the run
        skip_annotations: true
